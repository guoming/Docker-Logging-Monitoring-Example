version: '3.5'
networks:
  microservice:
    external:
      name: microservice
  apm:
    external:
      name: apm
services:
  grafana:
    restart: always
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    deploy:
     replicas: 1
     restart_policy:
      condition: on-failure
    volumes:
      - ./grafana/:/etc/grafana/provisioning/    
      - /media/sdb1/grafana:/var/lib/grafana      
    networks:
      - apm
      - microservice
    environment:     
     - SERVICE_NAME=grafana
     - SERVICE_TAGS=apm
  influxdb:
    restart: always
    image: tutum/influxdb:latest
    ports:
      - "8083:8083"
      - "8086:8086"
    deploy:
     replicas: 1
     restart_policy:
      condition: on-failure
    environment:
      - ADMIN_USER="root" 
      - INFLUXDB_INIT_PWD="influxdb" 
      - PRE_CREATE_DB="AppMetrics;"
      - SERVICE_NAME=influxdb
      - SERVICE_TAGS=apm
    volumes:
      - /media/sdb1/influxdb:/data
    networks:
      - microservice
      - apm
  prometheus:
    restart: always
    image: prom/prometheus
    deploy:
     replicas: 1
     restart_policy:
      condition: on-failure
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus/:/etc/prometheus/
      - /media/sdb1/prometheus/data:/prometheus
    networks:
      - microservice
      - apm
    command: --config.file=/etc/prometheus/prometheus.yml --web.enable-lifecycle --web.enable-admin-api
    environment:     
     - SERVICE_NAME=prometheus
     - SERVICE_TAGS=apm
  prometheus-alertmanager:
    image: prom/alertmanager:v0.16.0
    ports:
    - 9093:9093
    volumes:
    - ./prometheus-alertmanager/:/etc/alertmanager/
    - /media/sdb1/alertmanager/data:/alertmanager
    command:
    - '--config.file=/etc/alertmanager/alertmanager.yml'
    - '--storage.path=/alertmanager'    
    restart: always
    networks:      
      - microservice
      - apm
    environment:     
     - SERVICE_NAME=prometheus-alertmanager
     - SERVICE_TAGS=apm
  prometheus-webhook-dingtalk:
    image: timonwong/prometheus-webhook-dingtalk:v0.3.0
    ports:
    - 8060:8060
    command:
    - '--ding.profile=main=https://oapi.dingtalk.com/robot/send?access_token=${DINGTALK_TOKEN}'
    restart: always
    networks:      
      - microservice
      - apm
    environment:     
     - SERVICE_NAME=prometheus-webhook-dingtalk
     - SERVICE_TAGS=apm
  prometheus-node-exporter:
    restart: always
    image: quay.io/prometheus/node-exporter
    deploy:
     mode: global
     restart_policy:
      condition: on-failure
    ports:
      - "9100:9100"
    volumes:
      - /proc:/host/proc:ro 
      - /sys:/host/sys:ro 
      - /:/rootfs:ro
    networks:
      - microservice
      - apm
    environment:     
     - SERVICE_NAME=prometheus-node-exporter
     - SERVICE_TAGS=apm
  prometheus-rabbitmq-exporter:
    restart: always
    image: kbudde/rabbitmq-exporter
    deploy:
     replicas: 1
     restart_policy:
      condition: on-failure
    ports:
      - "9419:9419"    
    environment:
      - RABBIT_URL=http://localhost:15672
      - RABBIT_USER=guest
      - RABBIT_PASSWORD=guest      
      - PUBLISH_PORT=9419
      - SERVICE_NAME=prometheus-rabbitmq-exporter
      - SERVICE_TAGS=apm
    networks:
      - microservice
      - apm
  prometheus-consul-exporter:
    restart: always
    image: prom/consul-exporter
    deploy:
     replicas: 1
     restart_policy:
      condition: on-failure
    ports:
      - "9107:9107"    
    command: --consul.server=consul-node1:8500
    networks:
      - apm
      - microservice
    environment:     
     - SERVICE_NAME=prometheus-consul-exporter
     - SERVICE_TAGS=apm
  prometheus-redis-exporter:
    restart: always
    image: oliver006/redis_exporter
    deploy:
     replicas: 1
     restart_policy:
      condition: on-failure
    ports:
      - "9121:9121"    
    environment:
      - REDIS_ADDR=localhost:6379
      - REDIS_PASSWORD=
      - SERVICE_NAME=prometheus-redis-exporter
      - SERVICE_TAGS=apm
    networks:
      - microservice
      - apm
  prometheus-mongodb-exporter:
    restart: always
    image: eses/mongodb_exporter
    deploy:
     replicas: 1
     restart_policy:
      condition: on-failure
    ports:
      - "9104:9104"          
    command: -mongodb.uri mongodb://user:password@localhost:27017/
    networks:
      - microservice
      - apm
    environment:     
     - SERVICE_NAME=prometheus-mongodb-exporter
     - SERVICE_TAGS=apm
  prometheus-elasticsearch_exporter:
    image: justwatch/elasticsearch_exporter:1.1.0
    command:
     - '--es.uri=http://elasticsearch:9200'    
    restart: always
    networks:
      - microservice
      - apm
    environment:     
     - SERVICE_NAME=prometheus-elasticsearch-exporter
     - SERVICE_TAGS=apm
  prometheus-mssql-exporter:
    restart: always
    image: awaragi/prometheus-mssql-exporter
    deploy:
     replicas: 1
     restart_policy:
      condition: on-failure
    ports:
      - "4000:4000"    
    environment:
      - SERVER=localhost
      - PORT=1433
      - USERNAME=root
      - PASSWORD=root
      - DEBUG=app
      - SERVICE_NAME=prometheus-mssql-exporter
      - SERVICE_TAGS=apm
    networks:
      - microservice
      - apm
  prometheus-aliyun-exporter:
    image: aylei/aliyun-exporter:0.3.2-rc
    volumes:
    - ./prometheus-exporter/prometheus-aliyun-exporter/:/etc/aliyun-exporter
    command:
    - '-p'
    - '9522'
    - '-c'
    - '/etc/aliyun-exporter/aliyun-exporter.yml'  
    environment:     
     - SERVICE_NAME=prometheus-aliyun-exporter
     - SERVICE_TAGS=apm 
     - ALIYUN_ACCESS_ID=LTAI4GHLWr9tqy63cmE1onsy
     - ALIYUN_ACCESS_SECRET=orN3eQg5pKt0BALlz3Ly0njP1j74N5
     - ALIYUN_REGION=cn-hangzhou
    ports:
    - 9522:9522
    restart: always
    networks:      
      - microservice
      - apm
  jaeger-collector:
    restart: always
    image: jaegertracing/jaeger-collector
    deploy:
     replicas: 3
     restart_policy:
      condition: on-failure
    ports:
      - "14250:14250"
      - "14267:14267"
      - "14268:14268"
      - "9411:9411"
    networks:
      - microservice
      - apm
    environment:     
     - SERVICE_NAME=jaeger-collector
     - SERVICE_TAGS=apm
     - COLLECTOR_ZIPKIN_HTTP_PORT=9411
     - SPAN_STORAGE_TYPE=elasticsearch
     - ES_SERVER_URLS=http://elasticsearch:9200
  jaeger-query:
    restart: always
    image: jaegertracing/jaeger-query
    deploy:
     replicas: 1
     restart_policy:
      condition: on-failure
    ports:
      - "16686:16686/tcp"
    networks:
      - microservice
      - apm
    environment:     
     - SERVICE_NAME=jaeger-query
     - SERVICE_TAGS=apm   
     - COLLECTOR_ZIPKIN_HTTP_PORT=9411
     - SPAN_STORAGE_TYPE=elasticsearch
     - ES_SERVER_URLS=http://elasticsearch:9200
  jaeger-agent:
    restart: always
    image: jaegertracing/jaeger-agent
    deploy:
     mode: global
     restart_policy:
      condition: on-failure
    ports:
      - "5775:5775/udp"
      - "6831:6831/udp"
      - "6832:6832/udp"
      - "5778:5778/tcp"
    networks:
      - microservice
      - apm
    environment:     
     - SERVICE_NAME=jaeger-agent
     - SERVICE_TAGS=apm
    depends_on:
        - jaeger-collector
    command: ["--reporter.type=grpc", "--reporter.grpc.host-port=jaeger-collector:14250"]